================================================================================
                SmartFusion2 MSS USB Virtual COM-port example
================================================================================
    This example project demonstrates the use of SmartFusion2 MSS USB to 
    Emulate Serial-COM port over USB 
    
    Using this project you can Perform serial data transfers from USB host
    to Smartfusion2 over an USB interface  
     
    This example Does not require Serial port connector on SF2 or Host PC 
    This example Does not require on board USB to UART converter hardware 

--------------------------------------------------------------------------------
                                Target hardware
--------------------------------------------------------------------------------
    MMS USB must be instantiated in Libero flow .
    PIN assignment must be done depending on the on board port used 
    MSS must run above 32Mhz for MSS USB to work properly 
    
        SmartFusion2 Eval Kit:
            USB cable must be connected to P1.
            Jumper: Connect (1 - 2) on J24.
            
        Validation board (RevB and RevC):
            USB ULPI-DB must be connected on J50 

            Jumper settings on ULPI-DB
            J55 - connect (1 - 2) - 3 3v VDDIDO 
            J56 - connect (1 - 2) - 3 3v clkout
            J57 - connect (1 - 2) - USB V-bus
            J31 - connect (1 - 2) - Power supply from Header 
            J19 - Mount for USB Host,OTG mode operations 
                  (Not necessary to mount when operating in Device mode alone )

        Devkit
            J139 - connect(1 - 2) - USB reset
            J163 - connect(1 - 2) - USB V-bus
            J164 - Mount for USB Host,OTG mode operations 
                   (Not necessary to mount when operating in Device mode alone )

    USB PHY Reset: GPIO-0 is used to keep the USB PHY out of reset 

--------------------------------------------------------------------------------
                        Driver installation and application
--------------------------------------------------------------------------------                   
    This application is serial COM port protocol emulation over USB bus With 
    this example, When connected to desktop Windows computer,SF2 will appear as 
    Serial COM port 

                                **Windows Driver**
    You need to install the driver on Windows machine to detect this device as a 
    COM port. 
    Install CDC_VCP_IAD inf, provided with this example, when prompted by Windows 
        
    On WindowsXP, Windows 2k the device may not be detected at first connection 
    If this happens, Please try updating all the latest available Patches\Fixes 
    from Windows  Please try Rebooting your machine for newly downloaded patches 
    (or previously downloaded patches )to take effect 

    On Windows8 PC, disable the security options to be able to install custom 
    driver which is not digitally signed 

    Use Hyperterminal (recommended) to communicate with the assigned COM port.
    To use Hyperterminal on WIndows7 you may want to refer 
        http://helpdeskgeek com/windows-7/windows-7-hyperterminal/
        
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          Silicon revision dependencies
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    This example is built to execute on an M2S090 die.  You will need to 
    overwrite this example project's "drivers_config/sys_config" and "CMSIS" 
    folders with the one generated by Libero for your hardware design if using a
    another silicon revision or the hardware configuration (clock etc) is
    different in your design 

    The "drivers_config/sys_config" folder contains information about your hardware
    design  This information is used by the CMSIS to initialize clock frequencies
    global variables which are used by the SmartFusion2 drivers to derive baud
    rates  The CMSIS boot code may also complete the device's clock configuration
    depending on silicon version  The "CMSIS" and "drivers_config/sys_config" for
    your design can be found in the "firmware" folder of your Libero design         